import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
	id 'org.springframework.boot' version '2.5.1' apply false
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.tng.oss.pfhk'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11
targetCompatibility = 11

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

}

springBoot {
	buildInfo()
}


repositories {
	maven {
		url 'https://maven.aliyun.com/repository/public/'
		artifactUrls "http://mirrors.cloud.tencent.com/nexus/repository/maven-public/"
	}
	maven {
		url 'https://maven.aliyun.com/repository/spring/'
	}
	mavenLocal()
	mavenCentral()
}



dependencies {
	implementation platform(SpringBootPlugin.BOM_COORDINATES)
	developmentOnly("org.springframework.boot:spring-boot-devtools")

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	annotationProcessor 'org.hibernate:hibernate-jpamodelgen'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-logging'



	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'


	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	//database
	developmentOnly 'com.h2database:h2'
//	runtimeOnly 'org.postgresql:postgresql'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
	imports {
		mavenBom SpringBootPlugin.BOM_COORDINATES
	}
}

test {
	useJUnitPlatform()
}
